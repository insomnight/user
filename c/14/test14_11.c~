/*
 * 11．编写一个名为transform()的函数，接受4个参数：内含double类型数据的源数组名、内含double类型数据的目标数组名、一个表示数组元素个数的int类型参数、函数名（或等价的函数指针）。transform()函数应把指定函数应用于源数组中的每个元素，并把返回值存储在目标数组中。例如：
 *      transform(source, target, 100, sin);
 *      该声明会把target[0]设置为sin(source[0])，等等，共有100个元素。在一个程序中调用transform()4次，以测试该函数。分别使用math.h函数库中的两个函数以及自定义的两个函数作为参数。
 */
#include <stdio.h>
#include <math.h>

double * transform(const double * source,double * target, int size, double (*pfun)(double));
double doublenum(double num);
double mysuare(double num);
void print_arr(double * arr,int size);

int main(void)
{
    double list[] = { 11,12,13,14,5,2.2};
    double target[6];
    
    puts("doublenum:");
    transform(list,target,6,doublenum);
    print_arr(target,6);
    puts("mysuare:");
    transform(list,target,6,mysuare);
    print_arr(target,6);
    puts("sin:");
    transform(list,target,6,sin);
    print_arr(target,6);
    puts("sqrt:");
    transform(list,target,6,sqrt);
    print_arr(target,6);
    return 0;
}

double * transform(const double * source,double * target, int size, double (*pfun)(double))
{
    double * ret_val;
    ret_val = target;
    for(int i = 0; i < size; i++)
        target[i] = (*pfun)(source[i]);
   return ret_val; 
}

double doublenum(double num)
{
    return num * 2;
}

double mysuare(double num)
{
    return num * num;
}

void print_arr(double * arr,int size)
{
    for(int i = 0; i < 0; i++)
        printf("%lf ",arr[i]);
    putchar('\n');
}
