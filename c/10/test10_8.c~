/*
 * 8．使用编程练习2中的拷贝函数，把一个内含7个元素的数组中第3～第5个元素拷贝至内含3个元素的数组中。该函数本身不需要修改，只需要选择合适的实际参数（实际参数不需要是数组名和数组大小，只需要是数组元素的地址和待处理元素的个数）。
 */
#include<stdio.h>
#define ARR_SIZE 7

void copy_arr(double target[], double source[], int n);
void copy_ptr(double * target, double * source, int n);
void copy_ptrs(double * target,double * source_start, double * source_end);
void print_arr(double * target_start,double * target_end);

int main(void)
{
    double source[ARR_SIZE] = {1.1, 2.2, 3.3, 4.4, 5.5, 1.3, 4.4};
    double target1[3];
    copy_arr(target1, source[2], 3);

    printf("source:\n");
    print_arr(source,source + ARR_SIZE);

    printf("target1:\n");
    print_arr(target1,target1 + 3);
    return 0;
}

void copy_arr(double target[], double source[], int n)
{
    for(int i = 0; i < n; i++)
        target[i] = source[i];
}

void copy_ptr(double * target, double * source, int n)
{
    for(int i = 0; i< n; i++)
        *(target + i) = *(source +i);
}

void copy_ptrs(double * target, double * source_start, double * source_end)
{
    while(source_start < source_end)
    {
        * target = * source_start;
        target++;
        source_start++;
    }
}

void print_arr(double * target_start,double * target_end)
{
    while(target_start < target_end)
    {
        printf("%f ",* target_start);
        target_start++;
    }
    printf("\n");
}
